{"version":3,"sources":["assets/cart-fill.svg","components/Navigation.jsx","components/Footer.jsx","assets/cart-plus-fill.svg","api.js","components/Products.jsx","components/Home.jsx","assets/trash-fill.svg","components/Cart.jsx","App.js","reportWebVitals.js","index.js"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCartFill","_ref","svgRef","title","titleId","props","xmlns","width","height","fill","className","viewBox","ref","id","d","ForwardRef","withRouter","class","to","JSON","parse","localStorage","getItem","location","pathname","Footer","axios","create","baseURL","SvgCartPlusFill","Products","state","products","offset","data","perPage","currentPage","val","addToCart","bind","proID","quan","maxQuan","newQuan","api","put","productQuanitity","then","response","console","log","status","catch","error","proQuan","currDate","Date","staff","orderNum","orderNumRand","Math","floor","random","setItem","newOrder","orderNumber","staffID","productID","orderQuantity","orderDate","orderStatus","post","res","alert","window","reload","event","preventDefault","get","setState","Container","Row","xs","md","map","pro","Col","Card","Img","variant","src","productImage","Body","Title","productTitle","Text","productDescription","productPrice","Form","Group","Label","Control","type","min","max","onKeyDown","defaultValue","onChange","e","value","Button","onClick","React","Component","element","ReactDOM","render","document","getElementById","Home","orders","order","showDetails","ordsDetails","handleSubmit","handleChange","getOrder","getAllOrders","history","push","count","item","for","required","sta","name","staffFName","staffLName","Table","striped","bordered","hover","size","filter","ords","orderID","SvgTrashFill","Cart","placeOrder","deleteItem","componentDidMount","delete","removeItem","errorMessage","message","getProductInfo","ord","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.d08553e8.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCartFill(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-cart-fill\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCartFill);\nexport default __webpack_public_path__ + \"static/media/cart-fill.a389ac92.svg\";\nexport { ForwardRef as ReactComponent };","/*\r\nKimone Kuppasamy - August 2021\r\nSimple navigation used on all screens\r\n*/\r\nimport React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { ReactComponent as Logo } from '../assets/cart-fill.svg';\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div class=\"container\">\r\n          <Link class=\"navbar-brand\" to=\"/\">\r\n            Staff Orders - Staff: {JSON.parse(localStorage.getItem(\"Staff\"))}\r\n          </Link>\r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li\r\n                class={`nav-item  ${props.location.pathname === \"/\" ? \"active\" : \"\"\r\n                  }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${props.location.pathname === \"/products\" ? \"active\" : \"\"\r\n                  }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/products\">\r\n                  Products\r\n                </Link>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${props.location.pathname === \"/cart\" ? \"active\" : \"\"\r\n                  }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/cart\">\r\n                  <Logo className='logo' /> Cart\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","/*\r\nKimone Kuppasamy - August 2021\r\nSimple footer used on all screens\r\n*/\r\nimport React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <container>\r\n      <div className=\"footer\">\r\n        <footer class=\"page-footer py-1 bg-dark fixed-bottom\" >\r\n          <div class=\"container text-center text-md-left\">\r\n            <p class=\"m-0 text-center text-white\">\r\n              Copyright &copy; Kimone Kuppasamy 2021\r\n            </p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </container>\r\n  );\r\n}\r\n\r\nexport default Footer;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCartPlusFill(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-cart-plus-fill\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1H.5zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM9 5.5V7h1.5a.5.5 0 0 1 0 1H9v1.5a.5.5 0 0 1-1 0V8H6.5a.5.5 0 0 1 0-1H8V5.5a.5.5 0 0 1 1 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCartPlusFill);\nexport default __webpack_public_path__ + \"static/media/cart-plus-fill.cd8423a9.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:61393/api'\r\n});","/*\r\nKimone Kuppasamy - August 2021\r\nThis is the Products View, It shows all products in a CARD view\r\nYou can specify the quantity you want to order\r\nYou can add items to the cart - this gets inserted into the OrdersCart table for the staff member\r\nYou can View order on the cart screen\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport api from '../api';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/Form'\r\nimport { ReactComponent as Logo } from '../assets/cart-plus-fill.svg';\r\n\r\nclass Products extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      offset: 0,\r\n      data: [],\r\n      perPage: 5,\r\n      currentPage: 0,\r\n      val: '1',\r\n    };\r\n    this.addToCart = this.addToCart.bind(this);\r\n    //this.updateProductQuan = this.updateProductQuan.bind(this);\r\n  }\r\n\r\n  //wanted to use this to update the quantity in the table... but couldnt\r\n  // this was not working out for me, not sure wat i did wrong\r\n  updateProductQuan(proID, quan, maxQuan) {\r\n\r\n    const newQuan = maxQuan - quan;\r\n    //const data = { productQuanitity: newQuan};\r\n    api.put('/OrdersProduct/' + proID, { productQuanitity: newQuan })\r\n      .then(response => {\r\n        console.log(\"Status: \", response.status);\r\n        console.log(\"Data: \", response.data);\r\n        //alert(\"Placed\");\r\n        //orderPlaced=true;\r\n\r\n      }).catch(error => {\r\n        console.error('Something went wrong!', error);\r\n      });\r\n      \r\n  }\r\n\r\n  //on button click call this function to add item to cart\r\n  addToCart(id, proQuan) {\r\n\r\n    //setting variables to be used\r\n    let currDate = new Date();\r\n    var staff = JSON.parse(localStorage.getItem(\"Staff\"));\r\n    var proID = JSON.parse(id);\r\n    var orderNum = JSON.parse(localStorage.getItem(\"OrderNum\"));\r\n    var quan = JSON.parse(this.state.val);\r\n    //var maxQuan = JSON.parse(proQuan);\r\n\r\n    //checking if no orderNumber already exists\r\n    if (!orderNum) {\r\n      const orderNumRand = Math.floor(Math.random() * 1000) + 1;\r\n      localStorage.setItem('OrderNum', orderNumRand);\r\n      orderNum = JSON.parse(orderNumRand);\r\n    }\r\n\r\n    //alert(orderNum);\r\n    \r\n    //checking if staff is logged in \r\n    if (!staff) {\r\n      alert(\"Please Login First\");\r\n    }\r\n    else {\r\n\r\n      //creating order object to use to add to cart\r\n      const newOrder = { orderNumber: orderNum, staffID: staff, productID: proID, orderQuantity: quan, orderDate: currDate, orderStatus: '' };\r\n\r\n      api.post(`/OrdersCart`, newOrder)\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          alert('Product added to cart');\r\n          //this.updateProductQuan(proID,quan,maxQuan)\r\n\r\n          window.location.reload(false);\r\n        })\r\n        .catch(error => {\r\n          alert('Something went wrong! ' + error);\r\n        });\r\n    }\r\n  }\r\n\r\n  //not allowing typing in quantity field\r\n  preventKeyboardInput(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    api.get('/OrdersProduct')\r\n      .then(res => {\r\n\r\n        if (!Object.keys(res.data).length) {\r\n          //alert(\"no data found\");\r\n          console.log(\"no data found\");\r\n        }\r\n        else {\r\n          const products = res.data;\r\n          this.setState({ products });\r\n        }\r\n      })\r\n  }\r\n\r\n    //this renders the actual html for the Card view\r\n  render() {\r\n    return (\r\n      <div class=\"overflow-auto\">\r\n        <Container >\r\n          <Row xs={1} md={4} className=\"g-4\">\r\n            {this.state.products.map(pro => (\r\n\r\n              <Col>\r\n\r\n                <Card>\r\n                  <Card.Img class=\"img-responsive\" variant=\"top\" src={pro.productImage} />\r\n                  <Card.Body>\r\n                    <Card.Title>{pro.productTitle}</Card.Title>\r\n                    <Card.Text>\r\n                      Decription: {pro.productDescription}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      Price: R{pro.productPrice}\r\n                    </Card.Text>\r\n                    <FormControl>\r\n                      <FormControl.Group className=\"mb-3\">\r\n                        <FormControl.Label>Quantity</FormControl.Label>\r\n                        <FormControl.Control\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max={pro.productQuanitity}\r\n                          onKeyDown={(event) => {\r\n                            event.preventDefault();\r\n                          }}\r\n                          defaultValue=\"1\"\r\n                          id='quantity'\r\n                          onChange={(e) => this.setState({ val: e.target.value })}\r\n                        />\r\n                      </FormControl.Group>\r\n                    </FormControl>\r\n\r\n                    <Button onClick={(e) => this.addToCart(pro.productID, pro.productQuanitity)}>\r\n                      <Logo className='logo' /> Add To Cart\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst element = <Products></Products>\r\n\r\nReactDOM.render(element, document.getElementById(\"root\"));\r\n\r\nexport default Products;","/*\r\nKimone Kuppasamy - August 2021\r\nThis is the Home View, It allows you to select a staff member to login as\r\n//in a real world scenario, this would be more secure, password protected\r\nSelect the staff member, click login and you will be taken to the products screen to complete your order\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport api from '../api';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      staff: [],\r\n      orders: [],\r\n      order: '',\r\n      id: '1',\r\n      showDetails: false,\r\n      ordsDetails: [],\r\n\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getOrder = this.getOrder.bind(this);\r\n    //localStorage.clear();\r\n  }\r\n\r\n  //when selected item changes, event occurs\r\n  handleChange(event) {\r\n\r\n    this.setState({ id: event.target.value });\r\n    this.setState({ showDetails: true });\r\n    this.getAllOrders();\r\n    alert(this.state.id);\r\n  }\r\n\r\n  //when login clicked, session states are set and getOrder is called\r\n  handleSubmit() {\r\n    var staff = this.state.id;\r\n    //alert(staff);\r\n    localStorage.setItem('Staff', staff);\r\n    \r\n    this.getOrder();\r\n\r\n    this.props.history.push(\"/Products\");\r\n\r\n  }\r\n\r\n  //getting details of all related orders for the selected staff member\r\n  //checking if member has any opened orders\r\n  //if yes, get the order number to be used in this instance\r\n  getOrder() {\r\n\r\n    api.get('/OrdersCart')\r\n      .then(res => {\r\n\r\n        if (!Object.keys(res.data).length) {\r\n          //alert(\"no data found\");\r\n          console.log(\"no data found\");\r\n        }\r\n        else {\r\n          const orders = res.data;\r\n          this.setState({ orders });\r\n\r\n          //alert(this.state.id);\r\n          let newOrder = [];\r\n          let count = 0;\r\n          let order = 0;\r\n          for (let item of orders) {\r\n            if (item.staffID === JSON.parse(localStorage.getItem(\"Staff\")) && item.orderStatus === \"\") {\r\n              count++;\r\n              newOrder.push(item.orderNumber);\r\n              // alert(\"in if statement 1\");\r\n            }\r\n          }\r\n\r\n          if (count > 0) {\r\n            //alert(\"in if statement 2\");\r\n            order = Math.max.apply(null, newOrder);\r\n            //alert(\"Order Exists for Staff\");\r\n            localStorage.setItem('OrderNum', order);\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    //window.localStorage.clear();\r\n    api.get('/OrdersStaff')\r\n      .then(res => {\r\n        const staff = res.data;\r\n        this.setState({ staff });\r\n\r\n      })\r\n    this.getOrder();\r\n\r\n    //alert(\"Component Order: \"+ this.state.order);\r\n\r\n  }\r\n\r\n  //get details of all orders\r\n  getAllOrders() {\r\n    api.get('/Orders')\r\n      .then(res => {\r\n        const ordsDetails = res.data;\r\n        this.setState({ ordsDetails });\r\n\r\n      })\r\n    //this.getOrder();\r\n  }\r\n  //this renders the actual html for the form view\r\n  render() {\r\n    return (\r\n      <container>\r\n        <div >\r\n\r\n          <Form className=\"text-center\">\r\n\r\n            <h4 class=\"mb-3\" for=\"staff\">Login in as: </h4>\r\n            <select\r\n              id=\"staff\"\r\n              defaultValue=\"1\"\r\n              //onChange={(e) => this.setState({ id: e.target.value })}\r\n              onChange={this.handleChange}\r\n              class=\"form-control text-center\"\r\n              required>\r\n              {this.state.staff.map(sta => (\r\n                <option class=\"form-control\" name=\"staff\" value={sta.staffID}>{sta.staffID} - {sta.staffFName} {sta.staffLName}</option>\r\n              ))};\r\n            </select>\r\n            <Button onClick={(e) => this.handleSubmit()}>Login</Button>\r\n\r\n\r\n          </Form>\r\n\r\n        </div>\r\n\r\n        <div>\r\n          {this.state.showDetails && // if it's true return the actual JSX\r\n            <div >\r\n              <h3>Previous Orders</h3>\r\n              <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Product</th>\r\n                    <th>Quantity</th>\r\n                    <th>Order Date</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.ordsDetails\r\n                    .filter(item => item.staffID === JSON.parse(this.state.id) && item.orderStatus === \"Y\")\r\n                    .map(ords => (\r\n                      <tr name=\"orderID\" key={ords.orderID}>\r\n                        <td>{ords.orderNumber}</td>\r\n                        <td>\r\n                          {this.state.products\r\n                            .filter(pro => pro.productID === ords.productID)\r\n                            .map(pro => (\r\n\r\n                              <td>{pro.productTitle} - {pro.productDescription}</td>\r\n                            ))}\r\n                        </td>\r\n\r\n                        <td>{ords.orderQuantity}</td>\r\n                        <td>{ords.orderDate}</td>\r\n                      </tr>\r\n\r\n                    )\r\n                    )\r\n                  }\r\n\r\n                </tbody>\r\n\r\n              </Table >\r\n            </div>\r\n          }\r\n        </div>\r\n      </container>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nconst element = <Home></Home>\r\n\r\nReactDOM.render(element, document.getElementById(\"root\"));\r\n\r\nexport default withRouter(Home);","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTrashFill(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-trash-fill\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrashFill);\nexport default __webpack_public_path__ + \"static/media/trash-fill.f1938ca5.svg\";\nexport { ForwardRef as ReactComponent };","/*\r\nKimone Kuppasamy - August 2021\r\nThis is the Cart View, It shows all items in the cart depending on the user logged in\r\nYou can delete items from the cart\r\nYou can also place an order which simply updated the order status to Y in the table\r\n//Assumptions - admin users can view orders\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport api from '../api';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { ReactComponent as Logo } from '../assets/trash-fill.svg';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Cart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orders: [],\r\n      order: '',\r\n      products: [],\r\n    };\r\n    this.placeOrder = this.placeOrder.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  //deletes item from cart based on the id passed through from the orders table\r\n  deleteItem(id) {\r\n\r\n    var orderNum = JSON.parse(localStorage.getItem(\"OrderNum\"));\r\n\r\n    //calling api to delete item\r\n    api.delete(`/OrdersCart/${id}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n\r\n        //resetting orders state\r\n        const orders = this.state.orders.filter(item => item.id !== id);\r\n        this.setState({ orders });\r\n\r\n        //checking if cart is empty\r\n        api.get('/OrdersCart')\r\n          .then(res => {\r\n            if (!Object.keys(res.data).length) {\r\n              //alert(\"Cart is empty\");\r\n              console.log(\"Cart is empty\");\r\n            }\r\n            else {\r\n              //filering data - if orderNumber matches and status is blank\r\n              const orders2 = res.data\r\n                .filter(item => item.orderNumber == orderNum && item.orderStatus === \"\");\r\n\r\n              if (orders2.length === 0) {\r\n                window.localStorage.removeItem(\"OrderNum\");\r\n                alert(\"Cart is Empty\");\r\n                this.props.history.push('/Products');\r\n              }\r\n              else {\r\n                alert(\"Item Deleted\");\r\n                window.location.reload(false);\r\n              }\r\n            }\r\n          }\r\n          ).catch(error => {\r\n            this.setState({ errorMessage: error.message });\r\n            alert('There was an error! - ' + error + `/OrdersCart/${id}`);\r\n          })\r\n      })\r\n      .catch(error => {\r\n        this.setState({ errorMessage: error.message });\r\n        alert('There was an error! - ' + error + `/OrdersCart/${id}`);\r\n      })\r\n\r\n  }\r\n\r\n  //called from button to place order\r\n  placeOrder() {\r\n    //setting order status to Y\r\n    const status = { orderStatus: 'Y' };\r\n\r\n    //getting cart details\r\n    api.get('/OrdersCart')\r\n      .then(res => {\r\n        if (!Object.keys(res.data).length) {\r\n          // alert(\"Cart is empty\");\r\n          console.log(\"Cart is empty\");\r\n        }\r\n        else {\r\n\r\n          const orders = res.data;\r\n          this.setState({ orders });\r\n          var count = 0;\r\n\r\n          //looping through items to update cart only for particular orderNumber\r\n          for (let item of orders) {\r\n            if (item.orderNumber == JSON.parse(localStorage.getItem(\"OrderNum\")) && item.orderStatus === \"\") {\r\n              count++;\r\n              api.put('/OrdersCart/' + item.orderID, status)\r\n                .then(response => {\r\n                  console.log(\"Status: \", response.status);\r\n                  console.log(\"Data: \", response.data);\r\n                  //alert(\"Placed\");\r\n\r\n                }).catch(error => {\r\n                  console.error('Something went wrong!', error);\r\n                });\r\n            }\r\n          }//for loop\r\n\r\n          if (count >= 1) {\r\n            alert(\"Order Placed\");\r\n            window.localStorage.removeItem(\"OrderNum\");\r\n            //window.location.reload(false);\r\n            this.props.history.push('/Products');\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  //getting product info so that we can replace productID with productTitle\r\n  getProductInfo() {\r\n    api.get('/OrdersProduct')\r\n      .then(res => {\r\n\r\n        if (!Object.keys(res.data).length) {\r\n          console.log(\"no data found\");\r\n        }\r\n        else {\r\n          const products = res.data;\r\n          this.setState({ products });\r\n        }\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    api.get('/OrdersCart')\r\n      .then(res => {\r\n        if (!Object.keys(res.data).length) {\r\n          //alert(\"Cart is empty\");\r\n          console.log(\"Cart is empty\");\r\n        }\r\n        else {\r\n          //this.state.orders.filter(item => item.id !== id)\r\n          const orders = res.data.filter(item => item.orderNumber == JSON.parse(localStorage.getItem(\"OrderNum\")) && item.orderStatus === \"\");\r\n          this.setState({ orders });\r\n        }\r\n      })\r\n    this.getProductInfo();\r\n  }\r\n\r\n  //this renders the actual html for the table view\r\n  render() {\r\n    return (\r\n\r\n      <div class=\"table-responsive\">\r\n\r\n        <h3>Order Number: {JSON.parse(localStorage.getItem(\"OrderNum\"))}</h3>\r\n\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.orders\r\n              .map(ord => (\r\n                <tr name=\"orderID\" key={ord.orderID}>\r\n                  <td>\r\n                    {this.state.products\r\n                      .filter(pro => pro.productID === ord.productID)\r\n                      .map(pro => (\r\n\r\n                        <td>{pro.productTitle} - {pro.productDescription} - R {pro.productPrice} x {ord.orderQuantity}</td>\r\n                        \r\n                      ))}\r\n                  </td>\r\n\r\n                  <td>{ord.orderQuantity}</td>\r\n\r\n                  <td><button onClick={(e) => this.deleteItem(ord.orderID)} >\r\n                    <Logo className='logo' />\r\n                  </button></td>\r\n                </tr>\r\n\r\n              )\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table >\r\n        <Button onClick={(e) => this.placeOrder()} >\r\n          Place Order\r\n        </Button>\r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst element = <Cart></Cart>\r\n\r\nReactDOM.render(element, document.getElementById(\"root\"));\r\n\r\nexport default withRouter(Cart);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Footer, Home, Products, Cart} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/Products\" exact component={() => <Products />} />\n          <Route path=\"/Cart\" exact component={() => <Cart />} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}